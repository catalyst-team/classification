model_params:
  model: MultiHeadNet
  encoder_params:
    arch: resnet18
    pretrained: True
    frozen: True
    pooling: MaxPool2d
    pooling_kwargs:
      kernel_size: 7      # [14, 7]
      stride: 7           # [14, 7]
  embedding_net_params:
    hiddens: [2048, 256]  # [512, 2048] first taken from resnet output, by hand
    activation_fn: ReLU
    norm_fn: BatchNorm1d
    bias: false
    dropout: 0.5
  heads_params:
    logits: &num_classes 2
    rotation_logits: &num_rotations 8
    class_rotation_logits: &num_class_rotations 16
    flare_logits: &num_flares 2
    blur_logits: &num_blures 8  #  9 - 3 + 1 + 1

args:
  expdir: "src"
  logdir: &logdir "./logs/classification_augs"
  baselogdir: "./logs/classification_augs_base"

stages:

  state_params:
    main_metric: &reduce_metric accuracy_class_rotations01
    minimize_metric: False

  data_params:
    num_workers: 4
    batch_size: 64
    per_gpu_scaling: True
    in_csv_train: "./data/dataset_train.csv"
    in_csv_valid: "./data/dataset_valid.csv"
    datapath: "./data/dataset"
    image_size: 448

  criterion_params:
    _key_value: True

    class:
      criterion: CrossEntropyLoss
    rotation:
      criterion: CrossEntropyLoss
    class_rotation:
      criterion: CrossEntropyLoss
    flare:
      criterion: CrossEntropyLoss
    blur:
      criterion: CrossEntropyLoss

  # train head
  stage1:

    state_params:
      num_epochs: 20

    optimizer_params:
      optimizer: Adam
      lr: 0.001
      weight_decay: 0.0001

    scheduler_params:
      scheduler: MultiStepLR
      milestones: [10]
      gamma: 0.3

    callbacks_params: &callbacks
      loss_class:
        callback: CriterionCallback
        input_key: targets
        output_key: logits
        prefix: loss_class
        criterion_key: class
      loss_rotation:
        callback: CriterionCallback
        input_key: rotation_factor
        output_key: rotation_logits
        prefix: loss_rotation
        criterion_key: rotation
      loss_class_rotation:
        callback: CriterionCallback
        input_key: class_rotation_targets
        output_key: class_rotation_logits
        prefix: loss_class_rotation
        criterion_key: class_rotation
      loss_flare:
        callback: CriterionCallback
        input_key: flare_factor
        output_key: flare_logits
        prefix: loss_flare
        criterion_key: flare
      loss_blur:
        callback: CriterionCallback
        input_key: blur_factor
        output_key: blur_logits
        prefix: loss_blur
        criterion_key: blur

      accuracy_class:
        callback: AccuracyCallback
        input_key: targets
        output_key: logits
        prefix: accuracy_class
        num_classes: *num_classes
      accuracy_rotation:
        callback: AccuracyCallback
        input_key: rotation_factor
        output_key: rotation_logits
        prefix: accuracy_rotation
        num_classes: *num_rotations
      accuracy_class_rotation:
        callback: AccuracyCallback
        input_key: class_rotation_targets
        output_key: class_rotation_logits
        prefix: accuracy_class_rotations
        num_classes: *num_class_rotations
      accuracy_flare:
        callback: AccuracyCallback
        input_key: flare_factor
        output_key: flare_logits
        prefix: accuracy_flare
        num_classes: *num_flares
      accuracy_blur:
        callback: AccuracyCallback
        input_key: blur_factor
        output_key: blur_logits
        prefix: accuracy_blur
        num_classes: *num_blures

      cm_class:
        callback: ConfusionMatrixCallback
        input_key: targets
        output_key: logits
        prefix: cm_class
        num_classes: *num_classes
      cm_rotation:
        callback: ConfusionMatrixCallback
        input_key: rotation_factor
        output_key: rotation_logits
        prefix: cm_rotation
        num_classes: *num_rotations
      cm_class_rotation:
        callback: ConfusionMatrixCallback
        input_key: class_rotation_targets
        output_key: class_rotation_logits
        prefix: cm_class_rotations
        num_classes: *num_class_rotations

      optimizer:
        callback: OptimizerCallback
      scheduler:
        callback: SchedulerCallback
        reduce_metric: *reduce_metric
      saver:
        callback: CheckpointCallback

  # tune whole network
  stage2:

    state_params:
      num_epochs: 10

    optimizer_params:
      optimizer: SGD
      lr: 0.0001

    scheduler_params:
      scheduler: MultiStepLR
      milestones: [8]
      gamma: 0.3

    callbacks_params: *callbacks

  infer:

    data_params:
      num_workers: 4
      batch_size: 64
      per_gpu_scaling: True
      in_csv: null
      in_csv_train: null
      in_csv_valid: "./data/dataset_valid.csv"
      in_csv_infer: "./data/dataset_train.csv"
      datapath: "./data/dataset"
      one_hot_classes: null

    callbacks_params:
      loader:
        callback: CheckpointCallback
      infer:
        callback: InferCallback
        out_dir: *logdir
        out_prefix: "/predictions/"
